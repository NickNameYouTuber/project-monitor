require('dotenv').config();
const express = require('express');
const http = require('http');
const cors = require('cors');
const connectDatabase = require('./config/database');
const initializeSocket = require('./config/socket');
const initializeWebRTCSignaling = require('./services/webrtcSignaling');
const initializeSimpleMeetService = require('./services/simpleMeetService');
const authRoutes = require('./routes/authRoutes');
const roomRoutes = require('./routes/roomRoutes');

const app = express();
const server = http.createServer(app);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö origins
const allowedOrigins = [
  'http://localhost:3000',
  'http://localhost:7677',
  'http://localhost:7676',
  'http://localhost:8080',
  'http://localhost:5173',
  'http://localhost:4173',
  'https://meet.nicorp.tech',
  'http://meet.nicorp.tech',
  'tauri://localhost',
  'http://tauri.localhost'
];

app.use(cors({
  origin: function (origin, callback) {
    console.log('üåê CORS –∑–∞–ø—Ä–æ—Å –æ—Ç origin:', origin);
    
    // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –±–µ–∑ origin (–Ω–∞–ø—Ä–∏–º–µ—Ä, Postman, –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
    if (!origin) {
      console.log('‚úÖ CORS —Ä–∞–∑—Ä–µ—à–µ–Ω (–Ω–µ—Ç origin)');
      return callback(null, true);
    }
    
    if (allowedOrigins.indexOf(origin) !== -1) {
      console.log('‚úÖ CORS —Ä–∞–∑—Ä–µ—à–µ–Ω –¥–ª—è origin:', origin);
      callback(null, true);
    } else {
      console.log('‚ùå CORS –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–ª—è origin:', origin);
      console.log('üìã –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ origins:', allowedOrigins);
      callback(new Error('–ù–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ CORS –ø–æ–ª–∏—Ç–∏–∫–æ–π'));
    }
  },
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin'],
  exposedHeaders: ['Content-Length', 'Content-Range']
}));

app.use(express.json());

// Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
  console.log(`üì• ${req.method} ${req.path} –æ—Ç ${req.get('Origin') || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
  next();
});

app.use('/api/auth', authRoutes);
app.use('/api/rooms', roomRoutes);

app.get('/', (req, res) => {
  res.json({ message: 'NIMeet API —Ä–∞–±–æ—Ç–∞–µ—Ç' });
});

connectDatabase();

const io = initializeSocket(server);
initializeWebRTCSignaling(io);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –≤—Å—Ç—Ä–µ—á
const simpleMeetService = initializeSimpleMeetService(io);

// API —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –≤—Å—Ç—Ä–µ—á
app.get('/api/simple-meet/rooms', (req, res) => {
  const rooms = simpleMeetService.getRooms();
  res.json({ rooms });
});

const PORT = process.env.PORT || 5000;

server.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`–û–∫—Ä—É–∂–µ–Ω–∏–µ: ${process.env.NODE_ENV || 'development'}`);
});

