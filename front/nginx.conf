server {
    listen 80;
    server_name nit.nicorp.tech;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name nit.nicorp.tech;

    client_max_body_size 102400M;

    ssl_certificate /etc/letsencrypt/live/nit.nicorp.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nit.nicorp.tech/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;

    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, DNT, X-Requested-With, If-Modified-Since, Cache-Control, Range, Accept, Origin, User-Agent, Referer, Sec-WebSocket-Protocol, Sec-WebSocket-Extensions, Sec-WebSocket-Key, Sec-WebSocket-Version" always;
    add_header X-Server-Name "nit" always;

    # Frontend (SPA)
    location / {
        if ($request_method = 'OPTIONS') { return 204; }

        proxy_pass http://127.0.0.1:7670;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
    }

    # REST API → Spring backend
    location /api/ {
        client_max_body_size 102400M;

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Range, Authorization, Content-Type, Origin, Referer";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }

        proxy_pass http://127.0.0.1:7671;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_redirect http:// https://;

        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
    }

    # Socket.IO signaling (новый сервис на 7673)
    location /socket.io/ {
        proxy_pass http://127.0.0.1:7673/socket.io/;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }
}